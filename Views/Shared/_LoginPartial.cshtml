@using Microsoft.AspNetCore.Identity
@inject SignInManager<BlogUser> SignInManager
@inject UserManager<BlogUser> UserManager
@inject IImageService ImageService

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        BlogUser? blogUser = await UserManager.GetUserAsync(User);
        <div class="dropdown main-profile-menu">
            <a class="d-flex" href="javascript:void(0)">
                <span class="main-img-user">
                    <img alt="avatar"
                         src="@ImageService.ConvertByteArrayToFile(blogUser.ImageFileData,blogUser.ImageFileType, DefaultImage.BlogUserImage)">
                </span>
            </a>
            <div class="dropdown-menu">
                <div class="header-navheading">
                    @blogUser?.FullName
                </div>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @blogUser?.FullName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        </div>
        </div>
        }
        else
        {

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
        }
    </ul>
